# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for license information.
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import TYPE_CHECKING

from azure.core import PipelineClient
from msrest import Deserializer, Serializer

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from typing import Any, Optional

    from azure.core.credentials import TokenCredential

from ._configuration import DevicesCorporateManagementConfiguration
from .operations import deviceappmanagementdeviceappmanagementOperations
from .operations import deviceappmanagementOperations
from .operations import deviceappmanagementandroidmanagedappprotectionsOperations
from .operations import deviceappmanagementdefaultmanagedappprotectionsOperations
from .operations import deviceappmanagementiosmanagedappprotectionsOperations
from .operations import deviceappmanagementmanagedapppoliciesOperations
from .operations import deviceappmanagementmanagedappregistrationsOperations
from .operations import deviceappmanagementmanagedappregistrationsappliedpoliciesOperations
from .operations import deviceappmanagementmanagedappregistrationsintendedpoliciesOperations
from .operations import deviceappmanagementmanagedebooksOperations
from .operations import deviceappmanagementmanagedebooksuserstatesummaryOperations
from .operations import deviceappmanagementmobileappconfigurationsOperations
from .operations import deviceappmanagementmobileappsOperations
from .operations import deviceappmanagementtargetedmanagedappconfigurationsOperations
from .operations import deviceappmanagementvpptokensOperations
from .operations import usersOperations
from .operations import usersmanageddevicesOperations
from . import models


class DevicesCorporateManagement(object):
    """DevicesCorporateManagement.

    :ivar deviceappmanagementdeviceappmanagement: deviceappmanagementdeviceappmanagementOperations operations
    :vartype deviceappmanagementdeviceappmanagement: devices_corporate_management.operations.deviceappmanagementdeviceappmanagementOperations
    :ivar deviceappmanagement: deviceappmanagementOperations operations
    :vartype deviceappmanagement: devices_corporate_management.operations.deviceappmanagementOperations
    :ivar deviceappmanagementandroidmanagedappprotections: deviceappmanagementandroidmanagedappprotectionsOperations operations
    :vartype deviceappmanagementandroidmanagedappprotections: devices_corporate_management.operations.deviceappmanagementandroidmanagedappprotectionsOperations
    :ivar deviceappmanagementdefaultmanagedappprotections: deviceappmanagementdefaultmanagedappprotectionsOperations operations
    :vartype deviceappmanagementdefaultmanagedappprotections: devices_corporate_management.operations.deviceappmanagementdefaultmanagedappprotectionsOperations
    :ivar deviceappmanagementiosmanagedappprotections: deviceappmanagementiosmanagedappprotectionsOperations operations
    :vartype deviceappmanagementiosmanagedappprotections: devices_corporate_management.operations.deviceappmanagementiosmanagedappprotectionsOperations
    :ivar deviceappmanagementmanagedapppolicies: deviceappmanagementmanagedapppoliciesOperations operations
    :vartype deviceappmanagementmanagedapppolicies: devices_corporate_management.operations.deviceappmanagementmanagedapppoliciesOperations
    :ivar deviceappmanagementmanagedappregistrations: deviceappmanagementmanagedappregistrationsOperations operations
    :vartype deviceappmanagementmanagedappregistrations: devices_corporate_management.operations.deviceappmanagementmanagedappregistrationsOperations
    :ivar deviceappmanagementmanagedappregistrationsappliedpolicies: deviceappmanagementmanagedappregistrationsappliedpoliciesOperations operations
    :vartype deviceappmanagementmanagedappregistrationsappliedpolicies: devices_corporate_management.operations.deviceappmanagementmanagedappregistrationsappliedpoliciesOperations
    :ivar deviceappmanagementmanagedappregistrationsintendedpolicies: deviceappmanagementmanagedappregistrationsintendedpoliciesOperations operations
    :vartype deviceappmanagementmanagedappregistrationsintendedpolicies: devices_corporate_management.operations.deviceappmanagementmanagedappregistrationsintendedpoliciesOperations
    :ivar deviceappmanagementmanagedebooks: deviceappmanagementmanagedebooksOperations operations
    :vartype deviceappmanagementmanagedebooks: devices_corporate_management.operations.deviceappmanagementmanagedebooksOperations
    :ivar deviceappmanagementmanagedebooksuserstatesummary: deviceappmanagementmanagedebooksuserstatesummaryOperations operations
    :vartype deviceappmanagementmanagedebooksuserstatesummary: devices_corporate_management.operations.deviceappmanagementmanagedebooksuserstatesummaryOperations
    :ivar deviceappmanagementmobileappconfigurations: deviceappmanagementmobileappconfigurationsOperations operations
    :vartype deviceappmanagementmobileappconfigurations: devices_corporate_management.operations.deviceappmanagementmobileappconfigurationsOperations
    :ivar deviceappmanagementmobileapps: deviceappmanagementmobileappsOperations operations
    :vartype deviceappmanagementmobileapps: devices_corporate_management.operations.deviceappmanagementmobileappsOperations
    :ivar deviceappmanagementtargetedmanagedappconfigurations: deviceappmanagementtargetedmanagedappconfigurationsOperations operations
    :vartype deviceappmanagementtargetedmanagedappconfigurations: devices_corporate_management.operations.deviceappmanagementtargetedmanagedappconfigurationsOperations
    :ivar deviceappmanagementvpptokens: deviceappmanagementvpptokensOperations operations
    :vartype deviceappmanagementvpptokens: devices_corporate_management.operations.deviceappmanagementvpptokensOperations
    :ivar users: usersOperations operations
    :vartype users: devices_corporate_management.operations.usersOperations
    :ivar usersmanageddevices: usersmanageddevicesOperations operations
    :vartype usersmanageddevices: devices_corporate_management.operations.usersmanageddevicesOperations
    :param credential: Credential needed for the client to connect to Azure.
    :type credential: ~azure.core.credentials.TokenCredential
    :param top: Show only the first n items.
    :type top: int
    :param skip: Skip the first n items.
    :type skip: int
    :param search: Search items by search phrases.
    :type search: str
    :param filter: Filter items by property values.
    :type filter: str
    :param count: Include count of items.
    :type count: bool
    :param str base_url: Service URL
    """

    def __init__(
        self,
        credential,  # type: "TokenCredential"
        top=None,  # type: Optional[int]
        skip=None,  # type: Optional[int]
        search=None,  # type: Optional[str]
        filter=None,  # type: Optional[str]
        count=None,  # type: Optional[bool]
        base_url=None,  # type: Optional[str]
        **kwargs  # type: Any
    ):
        # type: (...) -> None
        if not base_url:
            base_url = 'https://graph.microsoft.com/v1.0'
        self._config = DevicesCorporateManagementConfiguration(credential, top, skip, search, filter, count, **kwargs)
        self._client = PipelineClient(base_url=base_url, config=self._config, **kwargs)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._serialize.client_side_validation = False
        self._deserialize = Deserializer(client_models)

        self.deviceappmanagementdeviceappmanagement = deviceappmanagementdeviceappmanagementOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagement = deviceappmanagementOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagementandroidmanagedappprotections = deviceappmanagementandroidmanagedappprotectionsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagementdefaultmanagedappprotections = deviceappmanagementdefaultmanagedappprotectionsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagementiosmanagedappprotections = deviceappmanagementiosmanagedappprotectionsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagementmanagedapppolicies = deviceappmanagementmanagedapppoliciesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagementmanagedappregistrations = deviceappmanagementmanagedappregistrationsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagementmanagedappregistrationsappliedpolicies = deviceappmanagementmanagedappregistrationsappliedpoliciesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagementmanagedappregistrationsintendedpolicies = deviceappmanagementmanagedappregistrationsintendedpoliciesOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagementmanagedebooks = deviceappmanagementmanagedebooksOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagementmanagedebooksuserstatesummary = deviceappmanagementmanagedebooksuserstatesummaryOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagementmobileappconfigurations = deviceappmanagementmobileappconfigurationsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagementmobileapps = deviceappmanagementmobileappsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagementtargetedmanagedappconfigurations = deviceappmanagementtargetedmanagedappconfigurationsOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.deviceappmanagementvpptokens = deviceappmanagementvpptokensOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.users = usersOperations(
            self._client, self._config, self._serialize, self._deserialize)
        self.usersmanageddevices = usersmanageddevicesOperations(
            self._client, self._config, self._serialize, self._deserialize)

    def close(self):
        # type: () -> None
        self._client.close()

    def __enter__(self):
        # type: () -> DevicesCorporateManagement
        self._client.__enter__()
        return self

    def __exit__(self, *exc_details):
        # type: (Any) -> None
        self._client.__exit__(*exc_details)
