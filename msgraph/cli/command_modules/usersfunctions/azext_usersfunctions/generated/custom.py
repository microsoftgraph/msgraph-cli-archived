# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=line-too-long
# pylint: disable=too-many-lines


def usersfunctions_usersactivity_recent(client,
                                        user_id):
    return client.recent(user_id=user_id)


def usersfunctions_userscalendarviewcalendar_allowed_calendar_sharing_role(client,
                                                                           user_id,
                                                                           event_id,
                                                                           user):
    return client.allowed_calendar_sharing_roles(user_id=user_id,
                                                 event_id=event_id,
                                                 user=user)


def usersfunctions_userscalendarviewinstance_delta(client,
                                                   user_id,
                                                   event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_userscalendarview_delta(client,
                                           user_id):
    return client.delta(user_id=user_id)


def usersfunctions_userscalendareventscalendar_allowed_calendar_sharing_role(client,
                                                                             user_id,
                                                                             event_id,
                                                                             user):
    return client.allowed_calendar_sharing_roles(user_id=user_id,
                                                 event_id=event_id,
                                                 user=user)


def usersfunctions_userscalendareventsinstance_delta(client,
                                                     user_id,
                                                     event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_userscalendarevent_delta(client,
                                            user_id):
    return client.delta(user_id=user_id)


def usersfunctions_userscalendar_allowed_calendar_sharing_role(client,
                                                               user_id,
                                                               user):
    return client.allowed_calendar_sharing_roles(user_id=user_id,
                                                 user=user)


def usersfunctions_userscalendargroupscalendarscalendarviewcalendar_allowed_calendar_sharing_role(client,
                                                                                                  user_id,
                                                                                                  calendar_group_id,
                                                                                                  calendar_id,
                                                                                                  event_id,
                                                                                                  user):
    return client.allowed_calendar_sharing_roles(user_id=user_id,
                                                 calendar_group_id=calendar_group_id,
                                                 calendar_id=calendar_id,
                                                 event_id=event_id,
                                                 user=user)


def usersfunctions_userscalendargroupscalendarscalendarviewinstance_delta(client,
                                                                          user_id,
                                                                          calendar_group_id,
                                                                          calendar_id,
                                                                          event_id):
    return client.delta(user_id=user_id,
                        calendar_group_id=calendar_group_id,
                        calendar_id=calendar_id,
                        event_id=event_id)


def usersfunctions_userscalendargroupscalendarscalendarview_delta(client,
                                                                  user_id,
                                                                  calendar_group_id,
                                                                  calendar_id):
    return client.delta(user_id=user_id,
                        calendar_group_id=calendar_group_id,
                        calendar_id=calendar_id)


def usersfunctions_userscalendargroupscalendarseventscalendar_allowed_calendar_sharing_role(client,
                                                                                            user_id,
                                                                                            calendar_group_id,
                                                                                            calendar_id,
                                                                                            event_id,
                                                                                            user):
    return client.allowed_calendar_sharing_roles(user_id=user_id,
                                                 calendar_group_id=calendar_group_id,
                                                 calendar_id=calendar_id,
                                                 event_id=event_id,
                                                 user=user)


def usersfunctions_userscalendargroupscalendarseventsinstance_delta(client,
                                                                    user_id,
                                                                    calendar_group_id,
                                                                    calendar_id,
                                                                    event_id):
    return client.delta(user_id=user_id,
                        calendar_group_id=calendar_group_id,
                        calendar_id=calendar_id,
                        event_id=event_id)


def usersfunctions_userscalendargroupscalendarsevent_delta(client,
                                                           user_id,
                                                           calendar_group_id,
                                                           calendar_id):
    return client.delta(user_id=user_id,
                        calendar_group_id=calendar_group_id,
                        calendar_id=calendar_id)


def usersfunctions_userscalendargroupscalendar_allowed_calendar_sharing_role(client,
                                                                             user_id,
                                                                             calendar_group_id,
                                                                             calendar_id,
                                                                             user):
    return client.allowed_calendar_sharing_roles(user_id=user_id,
                                                 calendar_group_id=calendar_group_id,
                                                 calendar_id=calendar_id,
                                                 user=user)


def usersfunctions_userscalendarscalendarviewcalendar_allowed_calendar_sharing_role(client,
                                                                                    user_id,
                                                                                    calendar_id,
                                                                                    event_id,
                                                                                    user):
    return client.allowed_calendar_sharing_roles(user_id=user_id,
                                                 calendar_id=calendar_id,
                                                 event_id=event_id,
                                                 user=user)


def usersfunctions_userscalendarscalendarviewinstance_delta(client,
                                                            user_id,
                                                            calendar_id,
                                                            event_id):
    return client.delta(user_id=user_id,
                        calendar_id=calendar_id,
                        event_id=event_id)


def usersfunctions_userscalendarscalendarview_delta(client,
                                                    user_id,
                                                    calendar_id):
    return client.delta(user_id=user_id,
                        calendar_id=calendar_id)


def usersfunctions_userscalendarseventscalendar_allowed_calendar_sharing_role(client,
                                                                              user_id,
                                                                              calendar_id,
                                                                              event_id,
                                                                              user):
    return client.allowed_calendar_sharing_roles(user_id=user_id,
                                                 calendar_id=calendar_id,
                                                 event_id=event_id,
                                                 user=user)


def usersfunctions_userscalendarseventsinstance_delta(client,
                                                      user_id,
                                                      calendar_id,
                                                      event_id):
    return client.delta(user_id=user_id,
                        calendar_id=calendar_id,
                        event_id=event_id)


def usersfunctions_userscalendarsevent_delta(client,
                                             user_id,
                                             calendar_id):
    return client.delta(user_id=user_id,
                        calendar_id=calendar_id)


def usersfunctions_userscalendar_allowed_calendar_sharing_role(client,
                                                               user_id,
                                                               calendar_id,
                                                               user):
    return client.allowed_calendar_sharing_roles(user_id=user_id,
                                                 calendar_id=calendar_id,
                                                 user=user)


def usersfunctions_userscalendarviewcalendarview_delta(client,
                                                       user_id,
                                                       event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_userscalendarviewcalendarevent_delta(client,
                                                        user_id,
                                                        event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_userscalendarviewcalendar_allowed_calendar_sharing_role(client,
                                                                           user_id,
                                                                           event_id,
                                                                           user):
    return client.allowed_calendar_sharing_roles(user_id=user_id,
                                                 event_id=event_id,
                                                 user=user)


def usersfunctions_userscalendarviewinstance_delta(client,
                                                   user_id,
                                                   event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_userscalendarview_delta(client,
                                           user_id):
    return client.delta(user_id=user_id)


def usersfunctions_userscontactfolderschildfolder_delta(client,
                                                        user_id,
                                                        contact_folder_id):
    return client.delta(user_id=user_id,
                        contact_folder_id=contact_folder_id)


def usersfunctions_userscontactfolderscontact_delta(client,
                                                    user_id,
                                                    contact_folder_id):
    return client.delta(user_id=user_id,
                        contact_folder_id=contact_folder_id)


def usersfunctions_userscontactfolder_delta(client,
                                            user_id):
    return client.delta(user_id=user_id)


def usersfunctions_userscontact_delta(client,
                                      user_id):
    return client.delta(user_id=user_id)


def usersfunctions_userseventscalendarview_delta(client,
                                                 user_id,
                                                 event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_userseventscalendarevent_delta(client,
                                                  user_id,
                                                  event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_userseventscalendar_allowed_calendar_sharing_role(client,
                                                                     user_id,
                                                                     event_id,
                                                                     user):
    return client.allowed_calendar_sharing_roles(user_id=user_id,
                                                 event_id=event_id,
                                                 user=user)


def usersfunctions_userseventsinstance_delta(client,
                                             user_id,
                                             event_id):
    return client.delta(user_id=user_id,
                        event_id=event_id)


def usersfunctions_usersevent_delta(client,
                                    user_id):
    return client.delta(user_id=user_id)


def usersfunctions_usersmailfolderschildfolder_delta(client,
                                                     user_id,
                                                     mail_folder_id):
    return client.delta(user_id=user_id,
                        mail_folder_id=mail_folder_id)


def usersfunctions_usersmailfoldersmessage_delta(client,
                                                 user_id,
                                                 mail_folder_id):
    return client.delta(user_id=user_id,
                        mail_folder_id=mail_folder_id)


def usersfunctions_usersmailfolder_delta(client,
                                         user_id):
    return client.delta(user_id=user_id)


def usersfunctions_usersmanagedappregistration_show_user_id_with_flagged_app_registration(client,
                                                                                          user_id):
    return client.get_user_ids_with_flagged_app_registration(user_id=user_id)


def usersfunctions_usersmessage_delta(client,
                                      user_id):
    return client.delta(user_id=user_id)


def usersfunctions_user_delta(client):
    return client.delta()


def usersfunctions_user_reminder_view(client,
                                      user_id,
                                      start_date_time,
                                      end_date_time):
    return client.reminder_view(user_id=user_id,
                                start_date_time=start_date_time,
                                end_date_time=end_date_time)


def usersfunctions_user_show_managed_app_diagnostic_statuses(client,
                                                             user_id):
    return client.get_managed_app_diagnostic_statuses(user_id=user_id)


def usersfunctions_user_show_managed_app_policy(client,
                                                user_id):
    return client.get_managed_app_policies(user_id=user_id)


def usersfunctions_usersonenotenotebookssectiongroupssectionspage_preview(client,
                                                                          user_id,
                                                                          notebook_id,
                                                                          section_group_id,
                                                                          onenote_section_id,
                                                                          onenote_page_id):
    return client.preview(user_id=user_id,
                          notebook_id=notebook_id,
                          section_group_id=section_group_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id=onenote_page_id)


def usersfunctions_usersonenotenotebookssectionspage_preview(client,
                                                             user_id,
                                                             notebook_id,
                                                             onenote_section_id,
                                                             onenote_page_id):
    return client.preview(user_id=user_id,
                          notebook_id=notebook_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id=onenote_page_id)


def usersfunctions_usersonenotenotebook_show_recent_notebook(client,
                                                             user_id,
                                                             include_personal_notebooks):
    return client.get_recent_notebooks(user_id=user_id,
                                       include_personal_notebooks=False if include_personal_notebooks is None else include_personal_notebooks)


def usersfunctions_usersonenotepage_preview(client,
                                            user_id,
                                            onenote_page_id):
    return client.preview(user_id=user_id,
                          onenote_page_id=onenote_page_id)


def usersfunctions_usersonenotepagesparentnotebooksectiongroupssectionspage_preview(client,
                                                                                    user_id,
                                                                                    onenote_page_id,
                                                                                    section_group_id,
                                                                                    onenote_section_id,
                                                                                    onenote_page_id1):
    return client.preview(user_id=user_id,
                          onenote_page_id=onenote_page_id,
                          section_group_id=section_group_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id1=onenote_page_id1)


def usersfunctions_usersonenotepagesparentnotebooksectionspage_preview(client,
                                                                       user_id,
                                                                       onenote_page_id,
                                                                       onenote_section_id,
                                                                       onenote_page_id1):
    return client.preview(user_id=user_id,
                          onenote_page_id=onenote_page_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id1=onenote_page_id1)


def usersfunctions_usersonenotepagesparentsectionpage_preview(client,
                                                              user_id,
                                                              onenote_page_id,
                                                              onenote_page_id1):
    return client.preview(user_id=user_id,
                          onenote_page_id=onenote_page_id,
                          onenote_page_id1=onenote_page_id1)


def usersfunctions_usersonenotesectiongroupsparentnotebooksectionspage_preview(client,
                                                                               user_id,
                                                                               section_group_id,
                                                                               onenote_section_id,
                                                                               onenote_page_id):
    return client.preview(user_id=user_id,
                          section_group_id=section_group_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id=onenote_page_id)


def usersfunctions_usersonenotesectiongroupssectionspage_preview(client,
                                                                 user_id,
                                                                 section_group_id,
                                                                 onenote_section_id,
                                                                 onenote_page_id):
    return client.preview(user_id=user_id,
                          section_group_id=section_group_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id=onenote_page_id)


def usersfunctions_usersonenotesectionspage_preview(client,
                                                    user_id,
                                                    onenote_section_id,
                                                    onenote_page_id):
    return client.preview(user_id=user_id,
                          onenote_section_id=onenote_section_id,
                          onenote_page_id=onenote_page_id)


def usersfunctions_usersoutlook_supported_language(client,
                                                   user_id):
    return client.supported_languages(user_id=user_id)


def usersfunctions_usersoutlook_supported_time_zone_ee48(client,
                                                         user_id):
    return client.supported_time_zones_ee48(user_id=user_id)


def usersfunctions_usersoutlook_supported_time_zones51_c6(client,
                                                          user_id,
                                                          time_zone_standard):
    return client.supported_time_zones51_c6(user_id=user_id,
                                            time_zone_standard=time_zone_standard)
