# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------
# pylint: disable=too-many-lines


def changenotifications_subscriptionssubscription_create_subscription(client,
                                                                      id_=None,
                                                                      application_id=None,
                                                                      change_type=None,
                                                                      client_state=None,
                                                                      creator_id=None,
                                                                      encryption_certificate=None,
                                                                      encryption_certificate_id=None,
                                                                      expiration_date_time=None,
                                                                      include_resource_data=None,
                                                                      latest_supported_tls_version=None,
                                                                      lifecycle_notification_url=None,
                                                                      notification_url=None,
                                                                      resource=None):
    body = {}
    if id_ is not None:
        body['id'] = id_
    if application_id is not None:
        body['application_id'] = application_id
    if change_type is not None:
        body['change_type'] = change_type
    if client_state is not None:
        body['client_state'] = client_state
    if creator_id is not None:
        body['creator_id'] = creator_id
    if encryption_certificate is not None:
        body['encryption_certificate'] = encryption_certificate
    if encryption_certificate_id is not None:
        body['encryption_certificate_id'] = encryption_certificate_id
    if expiration_date_time is not None:
        body['expiration_date_time'] = expiration_date_time
    if include_resource_data is not None:
        body['include_resource_data'] = include_resource_data
    if latest_supported_tls_version is not None:
        body['latest_supported_tls_version'] = latest_supported_tls_version
    if lifecycle_notification_url is not None:
        body['lifecycle_notification_url'] = lifecycle_notification_url
    if notification_url is not None:
        body['notification_url'] = notification_url
    if resource is not None:
        body['resource'] = resource
    return client.create_subscription(body=body)


def changenotifications_subscriptionssubscription_delete_subscription(client,
                                                                      subscription_id,
                                                                      if_match=None):
    return client.delete_subscription(subscription_id=subscription_id,
                                      if_match=if_match)


def changenotifications_subscriptionssubscription_list_subscription(client,
                                                                    orderby=None,
                                                                    select=None,
                                                                    expand=None):
    return client.list_subscription(orderby=orderby,
                                    select=select,
                                    expand=expand)


def changenotifications_subscriptionssubscription_show_subscription(client,
                                                                    subscription_id,
                                                                    select=None,
                                                                    expand=None):
    return client.get_subscription(subscription_id=subscription_id,
                                   select=select,
                                   expand=expand)


def changenotifications_subscriptionssubscription_update_subscription(client,
                                                                      subscription_id,
                                                                      id_=None,
                                                                      application_id=None,
                                                                      change_type=None,
                                                                      client_state=None,
                                                                      creator_id=None,
                                                                      encryption_certificate=None,
                                                                      encryption_certificate_id=None,
                                                                      expiration_date_time=None,
                                                                      include_resource_data=None,
                                                                      latest_supported_tls_version=None,
                                                                      lifecycle_notification_url=None,
                                                                      notification_url=None,
                                                                      resource=None):
    body = {}
    if id_ is not None:
        body['id'] = id_
    if application_id is not None:
        body['application_id'] = application_id
    if change_type is not None:
        body['change_type'] = change_type
    if client_state is not None:
        body['client_state'] = client_state
    if creator_id is not None:
        body['creator_id'] = creator_id
    if encryption_certificate is not None:
        body['encryption_certificate'] = encryption_certificate
    if encryption_certificate_id is not None:
        body['encryption_certificate_id'] = encryption_certificate_id
    if expiration_date_time is not None:
        body['expiration_date_time'] = expiration_date_time
    if include_resource_data is not None:
        body['include_resource_data'] = include_resource_data
    if latest_supported_tls_version is not None:
        body['latest_supported_tls_version'] = latest_supported_tls_version
    if lifecycle_notification_url is not None:
        body['lifecycle_notification_url'] = lifecycle_notification_url
    if notification_url is not None:
        body['notification_url'] = notification_url
    if resource is not None:
        body['resource'] = resource
    return client.update_subscription(subscription_id=subscription_id,
                                      body=body)
