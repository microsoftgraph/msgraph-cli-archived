name: msgraph_cli_$(Build.BuildId)

trigger:
  branches:
    include:
      - main

pr: none

stages:
- stage: BuildPackages
  displayName: 'Build Packages'
  jobs:
  - job: BuildMSIPackage
    displayName: "Build MSI Package"
    pool:
      vmImage: 'vs2017-win2016'
    strategy:
      matrix:
        Python37:
          python.version: '3.7'
    steps:
      - task: UsePythonVersion@0
        displayName: 'Use Python $(python.version)'
        inputs:
          versionSpec: '$(python.version)'

      - script: |
          python -m pip install --upgrade pip
          pip install wheel
        displayName: 'Upgrade pip and install wheel'

      - script: |
          python build_scripts/build_extensions.py
        displayName: 'Build cli extensions'

      - task: CmdLine@2
        displayName: 'Build msgraph-cli'
        inputs:
          script: |
            python setup.py sdist bdist_wheel
            set CLI_VERSION=$(CLI_VERSION)
            set
            cd build_scripts/windows/scripts
            build.cmd

      - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
        displayName: 'ESRP DLL CodeSigning (Microsoft.Graph.Core)'
        inputs:
          ConnectedServiceName: 'microsoftgraph ESRP CodeSign DLL and NuGet (AKV)'
          FolderPath: build_scripts/windows/out/
          Pattern: '*.msi'
          signConfigType: inlineSignParams
          inlineOperation: |
            [
              {
                  "keyCode": "CP-230012",
                  "operationSetCode": "SigntoolSign",
                  "parameters": [
                      {
                          "parameterName": "OpusName",
                          "parameterValue": "Microsoft"
                      },
                      {
                          "parameterName": "OpusInfo",
                          "parameterValue": "http://www.microsoft.com"
                      },
                      {
                          "parameterName": "FileDigest",
                          "parameterValue": "/fd \"SHA256\""
                      },
                      {
                          "parameterName": "PageHash",
                          "parameterValue": "/NPH"
                      },
                      {
                          "parameterName": "TimeStamp",
                          "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                      }
                  ],
                  "toolName": "sign",
                  "toolVersion": "1.0"
              },
              {
                  "keyCode": "CP-230012",
                  "operationSetCode": "SigntoolVerify",
                  "parameters": [],
                  "toolName": "sign",
                  "toolVersion": "1.0"
              }
            ]
          SessionTimeout: 20

      - task: PublishPipelineArtifact@1
        displayName: 'Publish msgraph-cli artifact'
        inputs:
          TargetPath: 'build_scripts/windows/out/'
          ArtifactName: msgraph_msi


  - job: BuildDebianPackage
    displayName: "Build Debian Package"
    pool:
      vmImage: 'ubuntu-18.04'
      strategy:
        matrix:
          Python37:
            python.version: '3.7'
    steps: 
      - task: UsePythonVersion@0
        displayName: 'Use Python $(python.version)'

      - script: |
          python -m pip install --upgrade pip
          pip install wheel
        displayName: 'Upgrade pip and install wheel'

      - bash: |
          python build_scripts/build_extensions.py
        displayName: 'Build cli extensions'          

      - bash: |
          chmod u+x build_scripts/debian/build.sh
          chmod u+x build_scripts/debian/prepare.sh
          
          docker build --target build-env -f ./build_scripts/debian/Dockerfile -t microsoft/msgraph-cli:ubuntu-builder .
          docker run --name debian microsoft/msgraph-cli:ubuntu-builder

          mkdir -p debian/out/

          docker cp debian:/msgraph-cli_all.deb ./debian/out/
        displayName: 'Build docker image'

      - task: PublishPipelineArtifact@1
        displayName: 'Publish msgraph-cli debian artifact'
        inputs:
          TargetPath: 'debian/out'
          ArtifactName: msgraph_deb




- stage: ReleaseToGithub
  jobs:
    - job: ReleaseToGithub
      displayName: "Release to GitHub"
      pool:
        vmImage: 'ubuntu-18.04'
      steps:
        - task: DownloadPipelineArtifact@2
          inputs:
            source: current

        - bash: |
            echo "Show whats in the build directory"
            ls -la $(Pipeline.Workspace)

            echo "Showing msgraph/cli"
            ls $(Pipeline.Workspace)/msgraph_msi
          displayName: 'Directory structure'
    
        - task: GitHubRelease@0
          inputs:
            gitHubConnection: 'ddyett'
            repositoryName: 'microsoftgraph/msgraph-cli'
            tagSource: 'manual'
            tag: '$(Build.BuildNumber)'
            assets: |
              $(Pipeline.Workspace)/msgraph_msi/*.msi
              $(Pipeline.Workspace)/msgraph_deb/*.deb




- stage: BuildHomebrewFormula
  jobs:
    - job: BuildHomebrewFormula
      displayName: "Generate HomebrewFormula"
      pool:
        vmImage: 'ubuntu-18.04'
        strategy:
          matrix:
            Python37:
              python.version: '3.7'
      steps:
        - task: UsePythonVersion@0
          displayName: 'Use Python $(python.version)'

        - bash: |
            python -m pip install --upgrade pip
            pip install -r build_scripts/homebrew/requirements.txt 
            pip install .
          displayName: 'Upgrade pip and install dependencies'

        - bash: |
            export GITHUB_RELEASE_TAR='https://github.com/microsoftgraph/msgraph-cli/archive/msgraph_cli_$(Build.BuildId).tar.gz'
            python build_scripts/homebrew/generate_formula.py

          displayName: "Generate homebrew formula"

        - task: PublishPipelineArtifact@1
          displayName: 'Publish msgraph-cli debian artifact'
          inputs:
            TargetPath: './msgraph-cli.rb'
            ArtifactName: homebrew_formula