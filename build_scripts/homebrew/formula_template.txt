class MsgraphCli < Formula
  include Language::Python::Virtualenv

  desc "Python based command line tools for interacting with Microsoft Graph"
  homepage "https://developer.microsoft.com/en-us/graph"
  version "{{ cli_version }}"
  url "{{ github_release_tar }}"
  sha256 "{{ sha256 }}"
  license "MIT"

  depends_on "openssl@1.1"
  depends_on "python@3.8"

  uses_from_macos "libffi"

  on_linux do
    depends_on "pkg-config" => :build
  end

  {{resources}}

  def install
    # Work around Xcode 11 clang bug
    # https://code.videolan.org/videolan/libbluray/issues/20
    ENV.append_to_cflags "-fno-stack-check" if DevelopmentTools.clang_build_version >= 1010
    venv = virtualenv_create(libexec, "python3")

    venv.pip_install resources

    extensions = Dir.glob('msgraph/cli/command_modules/*')

    # install msgraph module
    venv.pip_install buildpath

   # Install extensions
    extensions.each do |extension|
      if File.directory?(buildpath/"#{extension}")
        cd buildpath/"#{extension}" do
            begin
                puts("Installing #{extension}")
                venv.instance_variable_get(:@formula).system venv.instance_variable_get(:@venv_root)/"bin/pip", "install", "."
            rescue => error
               # pass
            end
        end
      end
    end


    cd buildpath do
        venv.instance_variable_get(:@formula).system venv.instance_variable_get(:@venv_root)/"bin/pip", "download" , "-i", "https://test.pypi.org/simple/", "msgraph-cli-core==2.25.0.3", "--no-deps"
        venv.instance_variable_get(:@formula).system venv.instance_variable_get(:@venv_root)/"bin/pip", "install" , "./msgraph-cli-core-2.25.0.3.tar.gz"
    end


    (bin/"graph").write <<~EOS
      #!/usr/bin/env bash
      MG_INSTALLER=HOMEBREW #{libexec}/bin/python -m msgraph.cli \"$@\"
    EOS

    bash_completion.install "az.completion" => "graph"
  end
end
